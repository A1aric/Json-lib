<project name="json-lib" default="compile" basedir="." xmlns:artifact="urn:maven-artifact-ant">
	<property file="${user.home}/.m2/maven.properties" />
	<property name="maven.build.output" value="target/classes" />
	<property name="maven.build.directory" value="target" />
	<property name="maven.test.reports" value="${maven.build.directory}/test-reports" />
	<property name="maven.test.output" value="target/test-classes" />
	<property name="maven.repo.local" value="${user.home}/.m2/repository" />
	<property name="project.lib.dir" value="${basedir}/src/lib" />
	<property name="project.src.jdk13.dir" value="${basedir}/src/main/java" />
	<property name="project.src.jdk15.dir" value="${basedir}/src/main/jdk15" />
	<property name="project.test.jdk13.dir" value="${basedir}/src/test/java" />
	<property name="project.test.jdk15.dir" value="${basedir}/src/test/jdk15" />
	<property name="javadoc.jdk13.dir" value="$maven.build.directory}/site/apidocs" />
	<property name="javadoc.jdk15.dir" value="${maven.build.directory}/site/apidocs/jdk15" />

	<typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant">
		<classpath>
			<pathelement location="${project.lib.dir}/maven-artifact-ant-2.0.4-dep.jar" />
		</classpath>
	</typedef>
	<artifact:pom file="pom.xml" id="maven.project" />
	<artifact:dependencies pathId="build.classpath" filesetId="compile.fileset" useScope="compile">
		<pom refid="maven.project" />
	</artifact:dependencies>
	<artifact:dependencies pathId="test.classpath" filesetId="test.fileset" useScope="test">
		<pom refid="maven.project" />
	</artifact:dependencies>
	<artifact:dependencies pathId="runtime.classpath" filesetId="runtime.fileset" useScope="runtime">
		<pom refid="maven.project" />
	</artifact:dependencies>

	<target name="clean" description="Clean the output directory">
		<delete dir="${maven.build.directory}" />
	</target>

	<target name="compile" description="Compile the code (jdk13)">
		<mkdir dir="${maven.build.output}" />
		<javac destdir="${maven.build.output}" excludes="**/package.html" debug="true" deprecation="true" source="1.3" target="1.1">
			<src path="${project.src.jdk13.dir}" />
			<classpath refid="build.classpath" />
		</javac>
	</target>

	<target name="compile.jdk15" depends="compile" description="Compile the code (jdk15)">
		<delete file="${maven.build.output}/net/sf/json/JSONObject.class" />
		<delete file="${maven.build.output}/net/sf/json/JSONArray.class" />
		<javac destdir="${maven.build.output}" debug="true" deprecation="true" source="1.5" target="1.5">
			<src path="${project.src.jdk15.dir}" />
			<classpath>
				<path refid="build.classpath" />
				<pathelement location="${maven.build.output}" />
			</classpath>
		</javac>
	</target>

	<target name="compile-tests" depends="junit-present, compile" description="Compile the test code (jdk13)" if="junit.present">
		<mkdir dir="${maven.test.output}" />
		<javac destdir="${maven.test.output}" debug="true" deprecation="true" optimize="false" source="1.3" target="1.1">
			<src path="${project.test.jdk13.dir}" />
			<classpath>
				<path refid="build.classpath" />
				<path refid="test.classpath" />
				<pathelement location="${maven.build.output}" />
			</classpath>
		</javac>
		<copy todir="${maven.test.output}">
			<fileset dir="src/test/resources" />
		</copy>
	</target>

	<target name="compile-tests.jdk15" depends="junit-present, compile.jdk15, compile-tests" description="Compile the test code (jdk15)" if="junit.present">
		<mkdir dir="${maven.test.output}" />
		<delete file="${maven.test.output}/net/sf/json/TestJSONObject.class" />
		<delete file="${maven.test.output}/net/sf/json/TestJSONArray.class" />
		<javac destdir="${maven.test.output}" debug="true" deprecation="true" optimize="false" source="1.5" target="1.5">
			<src path="${project.test.jdk15.dir}" />
			<classpath>
				<path refid="build.classpath" />
				<path refid="test.classpath" />
				<pathelement location="${maven.build.output}" />
			</classpath>
		</javac>
	</target>

	<target name="test" depends="junit-present, compile-tests" if="junit.present" description="Run the test cases (jdk13)">
		<mkdir dir="${maven.test.reports}" />
		<junit printSummary="yes" haltonerror="true" haltonfailure="true" fork="true" dir=".">
			<sysproperty key="basedir" value="." />
			<formatter type="xml" />
			<formatter type="plain" usefile="true" />
			<classpath>
				<path refid="build.classpath" />
				<path refid="test.classpath" />
				<path refid="runtime.classpath" />
				<pathelement location="${maven.build.output}" />
				<pathelement location="${maven.test.output}" />
			</classpath>
			<batchtest todir="${maven.test.reports}">
				<fileset dir="src/test/java">
					<include name="**/Test*.java" />
					<exclude name="**/*Abstract*Test.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="test.jdk15" depends="junit-present, compile-tests.jdk15" if="junit.present" description="Run the test cases (jdk15)">
		<mkdir dir="${maven.test.reports}" />
		<junit printSummary="yes" haltonerror="true" haltonfailure="true" fork="true" dir=".">
			<sysproperty key="basedir" value="." />
			<formatter type="xml" />
			<formatter type="plain" usefile="true" />
			<classpath>
				<path refid="build.classpath" />
				<path refid="test.classpath" />
				<path refid="runtime.classpath" />
				<pathelement location="${maven.build.output}" />
				<pathelement location="${maven.test.output}" />
			</classpath>
			<batchtest todir="${maven.test.reports}">
				<fileset dir="src/test/java">
					<include name="**/Test*.java" />
					<exclude name="**/*Abstract*Test.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="test-junit-present">
		<available classname="junit.framework.Test" property="junit.present" />
	</target>
	<target name="junit-present" depends="test-junit-present" unless="junit.present">
		<echo>================================= WARNING ================================</echo>
		<echo> Junit isn&apos;t present in your $ANT_HOME/lib directory. Tests not executed. </echo>
		<echo>==========================================================================</echo>
	</target>

	<target name="jar" depends="clean,test" description="Binary jar (jdk13)">
		<jar jarfile="${maven.build.directory}/${maven.project.build.finalName}-jdk13.jar" basedir="${maven.build.output}" excludes="**/package.html" />
	</target>

	<target name="jar.jdk15" depends="clean,test.jdk15" description="Binary jar (jdk15)">
		<jar jarfile="${maven.build.directory}/${maven.project.build.finalName}-jdk15.jar" basedir="${maven.build.output}" excludes="**/package.html" />
	</target>

	<target name="source.jar" depends="clean" description="Source jar (jdk13)">
		<mkdir dir="${maven.build.directory}/source/jdk13" />
		<copy todir="${maven.build.directory}/source/jdk13">
			<fileset dir="src/main/java">
				<include name="**/*.java" />
			</fileset>
		</copy>
		<jar jarfile="${maven.build.directory}/${maven.project.build.finalName}-sources-jdk13.jar" basedir="${maven.build.directory}/source/jdk13" />
	</target>

	<target name="source.jar.jdk15" depends="clean" description="Source jar (jdk15)">
		<mkdir dir="${maven.build.directory}/source/jdk15" />
		<copy todir="${maven.build.directory}/source/jdk15">
			<fileset dir="src/main/java">
				<include name="**/*.java" />
			</fileset>
			<fileset dir="src/main/jdk15">
				<include name="**/*.java" />
			</fileset>
		</copy>
		<jar jarfile="${maven.build.directory}/${maven.project.build.finalName}-sources-jdk15.jar" basedir="${maven.build.directory}/source/jdk15" />
	</target>

	<target name="javadoc.jdk15" description="Build javadocs (jdk15)">
		<mkdir dir="${javadoc.jdk15.dir}" />
		<mkdir dir="${maven.build.directory}/source/jdk15" />
		<copy todir="${maven.build.directory}/source/jdk15">
			<fileset dir="src/main/java">
				<include name="**/*" />
			</fileset>
			<fileset dir="src/main/jdk15">
				<include name="**/*.java" />
			</fileset>
		</copy>
		<javadoc destdir="${javadoc.jdk15.dir}" windowtitle="Overview (json-lib jdk15 API)" useexternalfile="true">

			<packageset dir="${maven.build.directory}/source/jdk15">
				<include name="**/*" />
			</packageset>

			<classpath>
				<path refid="build.classpath" />
			</classpath>

			<link href="http://java.sun.com/j2se/1.5.0/docs/api/" />
			<link href="http://www.junit.org/junit/javadoc/3.8.1" />
		</javadoc>
		<jar jarfile="${maven.build.directory}/${maven.project.build.finalName}-javadoc-jdk15.jar" basedir="${javadoc.jdk15.dir}" />
	</target>

</project>